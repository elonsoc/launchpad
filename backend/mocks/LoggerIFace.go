// Code generated by mockery v2.32.4. DO NOT EDIT.

package mocks

import (
	logrus "github.com/sirupsen/logrus"
	mock "github.com/stretchr/testify/mock"
)

// LoggerIFace is an autogenerated mock type for the LoggerIFace type
type LoggerIFace struct {
	mock.Mock
}

// Error provides a mock function with given fields: _a0, _a1
func (_m *LoggerIFace) Error(_a0 string, _a1 logrus.Fields) {
	_m.Called(_a0, _a1)
}

// Fatal provides a mock function with given fields: _a0
func (_m *LoggerIFace) Fatal(_a0 error) {
	_m.Called(_a0)
}

// Info provides a mock function with given fields: _a0, _a1
func (_m *LoggerIFace) Info(_a0 string, _a1 logrus.Fields) {
	_m.Called(_a0, _a1)
}

// NewLoggerIFace creates a new instance of LoggerIFace. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLoggerIFace(t interface {
	mock.TestingT
	Cleanup(func())
}) *LoggerIFace {
	mock := &LoggerIFace{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
